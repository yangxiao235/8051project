C51 COMPILER V9.00   TIMER                                                                 02/20/2016 16:55:27 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE TIMER
OBJECT MODULE PLACED IN timer.obj
COMPILER INVOKED BY: D:\Program Files (x86)\Keil\C51\BIN\C51.EXE stc_lib\timer.c COMPACT BROWSE INCDIR(.\stc_lib;..\数字
                    -口腔测力计v0.2) DEBUG OBJECTEXTEND PRINT(.\timer.lst) OBJECT(timer.obj)

line level    source

   1          
   2          /*************  功能说明        **************
   3          
   4          本文件为STC15xxx系列的定时器初始化和中断程序,
   5          用户可以在这个文件中修改自己需要的中断程序.
   6          
   7          
   8          ******************************************/
   9          
  10          
  11          
  12          #include        "timer.h"
  13          
  14          /********************* Timer0中断函数************************/
  15          void timer0_int (void) interrupt TIMER0_VECTOR
  16          {
  17   1      
  18   1      }
  19          
  20          /********************* Timer1中断函数************************/
  21          void timer1_int (void) interrupt TIMER1_VECTOR
  22          {
  23   1      
  24   1      }
  25          
  26          /********************* Timer2中断函数************************/
  27          void timer2_int (void) interrupt TIMER2_VECTOR
  28          {
  29   1              P10 = ~P10;
  30   1      }
  31          
  32          
  33          //========================================================================
  34          // 函数: u8     Timer_Inilize(u8 TIM, TIM_InitTypeDef *TIMx)
  35          // 描述: 定时器初始化程序.
  36          // 参数: TIMx: 结构参数,请参考timer.h里的定义.
  37          // 返回: 成功返回0, 空操作返回1,错误返回2.
  38          // 版本: V1.0, 2012-10-22
  39          //========================================================================
  40          u8      Timer_Inilize(u8 TIM, TIM_InitTypeDef *TIMx)
  41          {
  42   1              if(TIM > Timer2)        return 1;       //空操作
  43   1      
  44   1              if(TIM == Timer0)
  45   1              {
  46   2                      TR0 = 0;                //停止计数
  47   2                      if(TIMx->TIM_Interrupt == ENABLE)               ET0 = 1;        //允许中断
  48   2                      else                                                                    ET0 = 0;        //禁止中断
  49   2                      if(TIMx->TIM_Polity == PolityHigh)              PT0 = 1;        //高优先级中断
  50   2                      else                                                                    PT0 = 0;        //低优先级中断
  51   2                      if(TIMx->TIM_Mode >  TIM_16BitAutoReloadNoMask) return 2;       //错误
  52   2                      TMOD = (TMOD & ~0x03) | TIMx->TIM_Mode; //工作模式,0: 16位自动重装, 1: 16位定时/计数, 2: 8位自动重装, 3:
             - 16位自动重装, 不可屏蔽中断
  53   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_12T)        AUXR &= ~0x80;  //12T
C51 COMPILER V9.00   TIMER                                                                 02/20/2016 16:55:27 PAGE 2   

  54   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_1T)         AUXR |=  0x80;  //1T
  55   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_Ext)        TMOD |=  0x04;  //对外计数或分频
  56   2                      else                                                                            TMOD &= ~0x04;  //定时
  57   2                      if(TIMx->TIM_ClkOut == ENABLE)  INT_CLKO |=  0x01;      //输出时钟
  58   2                      else                                                    INT_CLKO &= ~0x01;      //不输出时钟
  59   2                      
  60   2                      TH0 = (u8)(TIMx->TIM_Value >> 8);
  61   2                      TL0 = (u8)TIMx->TIM_Value;
  62   2                      if(TIMx->TIM_Run == ENABLE)     TR0 = 1;        //开始运行
  63   2                      return  0;              //成功
  64   2              }
  65   1      
  66   1              if(TIM == Timer1)
  67   1              {
  68   2                      TR1 = 0;                //停止计数
  69   2                      if(TIMx->TIM_Interrupt == ENABLE)               ET1 = 1;        //允许中断
  70   2                      else                                                                    ET1 = 0;        //禁止中断
  71   2                      if(TIMx->TIM_Polity == PolityHigh)              PT1 = 1;        //高优先级中断
  72   2                      else                                                                    PT1 = 0;        //低优先级中断
  73   2                      if(TIMx->TIM_Mode >= TIM_16BitAutoReloadNoMask) return 2;       //错误
  74   2                      TMOD = (TMOD & ~0x30) | TIMx->TIM_Mode; //工作模式,0: 16位自动重装, 1: 16位定时/计数, 2: 8位自动重装
  75   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_12T)        AUXR &= ~0x40;  //12T
  76   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_1T)         AUXR |=  0x40;  //1T
  77   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_Ext)        TMOD |=  0x40;  //对外计数或分频
  78   2                      else                                                                            TMOD &= ~0x40;  //定时
  79   2                      if(TIMx->TIM_ClkOut == ENABLE)  INT_CLKO |=  0x02;      //输出时钟
  80   2                      else                                                    INT_CLKO &= ~0x02;      //不输出时钟
  81   2                      
  82   2                      TH1 = (u8)(TIMx->TIM_Value >> 8);
  83   2                      TL1 = (u8)TIMx->TIM_Value;
  84   2                      if(TIMx->TIM_Run == ENABLE)     TR1 = 1;        //开始运行
  85   2                      return  0;              //成功
  86   2              }
  87   1      
  88   1              if(TIM == Timer2)               //Timer2,固定为16位自动重装, 中断无优先级
  89   1              {
  90   2                      AUXR &= ~(1<<4);        //停止计数
  91   2                      if(TIMx->TIM_Interrupt == ENABLE)                       IE2  |=  (1<<2);        //允许中断
  92   2                      else                                                                            IE2  &= ~(1<<2);        //禁止中断
  93   2                      if(TIMx->TIM_ClkSource >  TIM_CLOCK_Ext)        return 2;
  94   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_12T)        AUXR &= ~(1<<2);        //12T
  95   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_1T)         AUXR |=  (1<<2);        //1T
  96   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_Ext)        AUXR |=  (1<<3);        //对外计数或分频
  97   2                      else                                                                            AUXR &= ~(1<<3);        //定时
  98   2                      if(TIMx->TIM_ClkOut == ENABLE)  INT_CLKO |=  0x04;      //输出时钟
  99   2                      else                                                    INT_CLKO &= ~0x04;      //不输出时钟
 100   2      
 101   2                      TH2 = (u8)(TIMx->TIM_Value >> 8);
 102   2                      TL2 = (u8)TIMx->TIM_Value;
 103   2                      if(TIMx->TIM_Run == ENABLE)     AUXR |=  (1<<4);        //开始运行
 104   2                      return  0;              //成功
 105   2              }
 106   1              return 2;       //错误
 107   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    416    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
C51 COMPILER V9.00   TIMER                                                                 02/20/2016 16:55:27 PAGE 3   

   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
